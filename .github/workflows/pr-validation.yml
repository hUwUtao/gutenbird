name: PR Validation

on:
  pull_request:
    branches: [main]

jobs:
  validate:
    name: Validate PR (${{ matrix.platform }})
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - platform: ubuntu-latest
            os-name: linux
          - platform: windows-latest
            os-name: windows
          - platform: macos-latest
            os-name: macos
    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: python -m pip install --upgrade pip uv

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build Python component
        run: bun run build:py

      - name: Build Electron app
        run: bun run build

      - name: Run tests
        run: bun run test

      - name: Validate package scripts
        run: |
          echo "Validating package scripts on ${{ matrix.os-name }}..."
          bun run --dry dev
          bun run --dry start
          bun run --dry build
          bun run --dry package
          bun run --dry build:linux
          bun run --dry build:win
          bun run --dry build:macos
          echo "All package scripts validated successfully on ${{ matrix.os-name }}!"

      - name: Check formatting
        run: |
          echo "Checking code formatting on ${{ matrix.os-name }}..."
          # Check if files are properly formatted (placeholder for actual formatting check)
          echo "Formatting check completed on ${{ matrix.os-name }}"

      - name: Lint JavaScript/TypeScript
        if: matrix.platform == 'ubuntu-latest'
        run: |
          echo "Running basic linting checks..."
          # Check for obvious syntax errors in JS/TS files
          find src -name "*.js" -o -name "*.jsx" | head -10 | xargs -I {} bun check {}
          echo "Linting completed"

  build-matrix:
    name: Build Matrix (${{ matrix.build-config.platform }})
    strategy:
      matrix:
        build-config:
          - platform: linux
            script: build:linux
          - platform: windows
            script: build:win
          - platform: macos
            script: build:macos
    runs-on: ${{ matrix.build-config.platform == 'linux' && 'ubuntu-latest' || matrix.build-config.platform == 'windows' && 'windows-latest' || 'macos-latest' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: python -m pip install --upgrade pip uv

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build ${{ matrix.build-config.platform }} package
        run: bun run ${{ matrix.build-config.script }}

      - name: Verify build output
        run: |
          echo "Verifying ${{ matrix.build-config.platform }} build output..."
          if [ -d "release" ]; then
            ls -la release/
            echo "${{ matrix.build-config.platform }} build verification passed!"
          else
            echo "Error: release directory not found for ${{ matrix.build-config.platform }}"
            exit 1
          fi
