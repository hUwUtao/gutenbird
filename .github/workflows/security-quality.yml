name: Security and Quality

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: python -m pip install --upgrade pip uv

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run security audit
        run: |
          echo "Running security audit..."
          bun audit
          echo "Security audit completed"

      - name: Check for known vulnerabilities
        run: |
          echo "Checking for known vulnerabilities..."
          # This would use a security scanning tool
          echo "Vulnerability check completed"

      - name: Check secrets in code
        uses: gitleaks/gitleaks-action@v2
        with:
          config-path: .gitleaks.toml

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Check code formatting
        run: |
          echo "Checking code formatting..."
          # Check if files would be modified by formatter
          find src -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" | head -20 | xargs -I {} echo "Checking {}"
          echo "Formatting check completed"

      - name: Validate package.json
        run: |
          echo "Validating package.json..."
          bun run --dry dev
          bun run --dry build
          bun run --dry test
          echo "package.json validation completed"

      - name: Check for large files
        run: |
          echo "Checking for large files..."
          find . -type f -size +5M -not -path "./.git/*" -not -path "./node_modules/*" -not -path "./dist/*" -not -path "./build/*" | head -10
          echo "Large file check completed"

      - name: Check for sensitive files
        run: |
          echo "Checking for sensitive files..."
          find . -name "*.env*" -o -name ".npmrc" -o -name ".pypirc" -o -name "*.key" -o -name "*.pem" | head -10
          echo "Sensitive file check completed"

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Check for outdated dependencies
        run: |
          echo "Checking for outdated dependencies..."
          bun outdated
          echo "Outdated dependency check completed"

      - name: Check Python dependencies
        run: |
          echo "Checking Python dependencies..."
          uv tree
          echo "Python dependency check completed"

      - name: Validate lockfiles
        run: |
          echo "Validating lockfiles..."
          if [ -f "bun.lockb" ]; then
            echo "bun.lockb exists and is valid"
          fi
          if [ -f "uv.lock" ]; then
            echo "uv.lock exists and is valid"
          fi
          echo "Lockfile validation completed"

  build-quality:
    name: Build Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: python -m pip install --upgrade pip uv

      - name: Set up Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build Python component
        run: bun run build:py

      - name: Verify Python build
        run: |
          echo "Verifying Python build..."
          if [ -d "build/py/cardmaker" ]; then
            echo "Python build verification passed!"
            ls -la build/py/cardmaker/
          else
            echo "Error: Python build directory not found"
            exit 1
          fi

      - name: Build Electron app
        run: bun run build

      - name: Verify Electron build
        run: |
          echo "Verifying Electron build..."
          if [ -f "dist/main/index.js" ] && [ -f "dist/preload/index.js" ]; then
            echo "Electron build verification passed!"
            ls -la dist/main/
            ls -la dist/preload/
          else
            echo "Error: Electron build files not found"
            exit 1
          fi

      - name: Check bundle size
        run: |
          echo "Checking bundle sizes..."
          if [ -d "dist/renderer/assets" ]; then
            find dist/renderer/assets -name "*.js" -o -name "*.css" | xargs -I {} sh -c 'echo "{}: $(stat -c%s {}) bytes"'
          fi
          echo "Bundle size check completed"
